{"version":3,"sources":["./src/environments/environment.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/message.service.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/heroes/heroes.component.html","./src/app/heroes/heroes.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/hero-detail/hero-detail.component.html","./src/app/hero-detail/hero-detail.component.ts","./src/app/hero.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div *ngIf=\"messageService.messages.length\">\n\n    <h2>Messages</h2>\n    <button class=\"clear\" (click)=\"messageService.clear()\">clear</button>\n    <div *ngFor='let message of messageService.messages'> {{message}} </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit() {\n  }\n\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}","<h3>Top Heroes</h3>\n<div class=\"grid grid-pad\">\n    <a *ngFor=\"let hero of heroes\" class=\"col-1-4\" routerLink=\"/detail/{{hero.id}}\">\n        <div class=\"module hero\">\n            <h4>{{hero.name}}</h4>\n        </div>\n    </a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n      .subscribe(heroes => this.heroes = heroes.slice(0, 4));\n  }\n}","<h2>My Heroes</h2>\n\n<div>\n\n    <label for=\"new_hero\">Hero number:</label>\n    <input id=\"new-hero\" #herono />\n    <label for=\"new_hero\">Hero name:</label>\n    <input id=\"new-hero\" #heroname />\n\n    <!-- (click) passes input value to add() and then clears the input -->\n    <button class=\" create \" title=\"create hero \" (click)=\"createHero(herono.value,heroname.value); herono.value='';heroname.value=''\">add</button>\n</div>\n\n<ul class=\"heroes \">\n    <li *ngFor=\"let hero of heroes \">\n\n        <a routerLink=\"/detail/{{hero.id}} \">\n            <span class=\"badge \">{{hero.no}}</span> {{hero.name}}\n        </a>\n        <button class=\"delete \" title=\"delete hero \" (click)=\"delete(hero.id) \">x</button>\n\n    </li>\n</ul>","import { Component, OnInit } from '@angular/core';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n  \n  heroes: Hero[];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n      .subscribe(heroes => this.heroes = heroes);\n  }\n  \n  createHero(no: string, name: string): void {\n    this.heroService.createHero({ no, name } as Hero)\n      .subscribe(hero => this.heroes.push(hero));\n\n  }\n\n\n  delete(id: string): void {\n    this.heroService.deleteHero(id)\n      .subscribe(_ => this.heroes = this.heroes.filter(hero => hero.id !== id));\n\n  }\n\n}\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tour of Heroes';;\n}\n","<h1>{{title}}</h1>\n<nav>\n    <a routerLink=\"/dashboard\">Dashboard</a>\n    <a routerLink=\"/heroes\">Heroes</a>\n    <a href=\"https://blog.csdn.net/qq_45264808/article/details/116519790\" target=\"_blank\" rel=\"noopener noreferrer\">课程作业</a>\n</nav>\n<router-outlet></router-outlet>\n<app-messages></app-messages>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { MessagesComponent } from './messages/messages.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }","<div *ngIf=\"hero\">\r\n    <h2>{{hero.name | uppercase}} Details</h2>\r\n    <div><span>number: </span>{{hero.no}}</div>\r\n    <div>\r\n        <label>name:\r\n        <input [(ngModel)]=\"hero.name\" placeholder=\"name\"/>\r\n      </label>\r\n    </div>\r\n    <button (click)=\"goBack()\">go back</button>\r\n    <button (click)=\"save()\">save</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: [ './hero-detail.component.css' ],\n  \n})\nexport class HeroDetailComponent implements OnInit {\n  hero: Hero ;\n\n  constructor(\n    private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  getHero(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.heroService.getHero(id)\n      .subscribe(hero => this.hero = hero);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    if (this.hero) {\n      this.heroService.updateHero(this.hero)\n        .subscribe(() => this.goBack());\n    }\n  }\n\n}","import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\n\nimport { Hero } from './hero';\n//import { HEROES } from './mock-heroes';\nimport { MessageService } from './message.service';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({ providedIn: 'root' })\nexport class HeroService {\n  private heroesUrl = 'http://106.13.193.143:2403/heros';  // URL to web api\n  /**\n * Handle Http operation that failed.\n * Let the app continue.\n * @param operation - name of the operation that failed\n * @param result - optional value to return as the observable result\n */\n  \n  constructor(private http: HttpClient,\n    private messageService: MessageService) { }\n\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n\n\n  /* getHeroes(): Observable<Hero[]> {\n    // TODO: send the message _after_ fetching the heroes\n    this.messageService.add('HeroService: fetched heroes');\n    return of(HEROES);\n  } */\n\n  /** GET heroes from the server */\n  getHeroes(): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n  }\n  getHero(id: string): Observable<Hero> {\n    // TODO: send the message _after_ fetching the hero\n    this.messageService.add(`HeroService: fetched hero `);\n    return this.http.get<Hero>(`${this.heroesUrl}/${id}`);\n  }\n  updateHero(hero: Hero): Observable<Hero> {\n    return this.http.put<Hero>(this.heroesUrl, hero);\n  }\n  createHero(hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero);3\n  }\n  deleteHero(id: string): Observable<Hero> {\n    return this.http.delete<Hero>(`${this.heroesUrl}/${id}`);\n  }\n/** POST: add a new hero to the server */\n\n}\n  \n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'detail/:id', component: HeroDetailComponent },\n  { path: 'heroes', component: HeroesComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}